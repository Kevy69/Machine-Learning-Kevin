ask:
    excerize 0: when to use train/test for graphs

    is learning_rate_schedule (e.g slow down learn rate per unit epoch and or gradient)
    only needed for stochastic gradient descent?

    mini batch code implementation (wtf do i do?)

    what is SVD?

    use x_test or scaled_x_test? data leakage?
        code in question:
        x_train_poly_features = poly_features.fit_transform(scaled_x_train)
        x_test_poly_features = poly_features.transform(x_test)


general notes:
    variable with a hat = known variable.


Linear regression:
    equation:
        y = a + bx +  (first degree)
        
        a = intercept
        b = slope
        y & x = predictions

    definitions:
        features: the variables where interested in.
        
        predictor/depedant variable: x
        response/indepedant variable: y

        residual(s): the distance(s) from the points to the line

    general:
        - most popular alg for calculating the regression line is the least squares alg.


Gradient descent:
    general:
        step size: slope(gradient) * learning rate

    batch gradient descent:
        equation: θⱼ₊₁ = θⱼ - n(2/m * Xᵀ (X * θⱼ - y))


polynomial regression:
    degree = increasing powers, getting more none linear
    order = dimentionality.
